// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foamtec.cpdap.web;

import com.foamtec.cpdap.domain.AppParameter;
import com.foamtec.cpdap.domain.security.AppUser;
import com.foamtec.cpdap.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<AppParameter, String> ApplicationConversionServiceFactoryBean.getAppParameterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.cpdap.domain.AppParameter, java.lang.String>() {
            public String convert(AppParameter appParameter) {
                return new StringBuilder().append(appParameter.getCreatedBy()).append(' ').append(appParameter.getUpdatedBy()).append(' ').append(appParameter.getStatus()).append(' ').append(appParameter.getCreatedDate()).toString();
            }
        };
    }
    
    public Converter<Long, AppParameter> ApplicationConversionServiceFactoryBean.getIdToAppParameterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.cpdap.domain.AppParameter>() {
            public com.foamtec.cpdap.domain.AppParameter convert(java.lang.Long id) {
                return AppParameter.findAppParameter(id);
            }
        };
    }
    
    public Converter<String, AppParameter> ApplicationConversionServiceFactoryBean.getStringToAppParameterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.cpdap.domain.AppParameter>() {
            public com.foamtec.cpdap.domain.AppParameter convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AppParameter.class);
            }
        };
    }
    
    public Converter<AppUser, String> ApplicationConversionServiceFactoryBean.getAppUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.cpdap.domain.security.AppUser, java.lang.String>() {
            public String convert(AppUser appUser) {
                return new StringBuilder().append(appUser.getCreatedBy()).append(' ').append(appUser.getUpdatedBy()).append(' ').append(appUser.getStatus()).append(' ').append(appUser.getCreatedDate()).toString();
            }
        };
    }
    
    public Converter<Long, AppUser> ApplicationConversionServiceFactoryBean.getIdToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.cpdap.domain.security.AppUser>() {
            public com.foamtec.cpdap.domain.security.AppUser convert(java.lang.Long id) {
                return AppUser.findAppUser(id);
            }
        };
    }
    
    public Converter<String, AppUser> ApplicationConversionServiceFactoryBean.getStringToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.cpdap.domain.security.AppUser>() {
            public com.foamtec.cpdap.domain.security.AppUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AppUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAppParameterToStringConverter());
        registry.addConverter(getIdToAppParameterConverter());
        registry.addConverter(getStringToAppParameterConverter());
        registry.addConverter(getAppUserToStringConverter());
        registry.addConverter(getIdToAppUserConverter());
        registry.addConverter(getStringToAppUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
